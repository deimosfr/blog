<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Deimosfr Blog</title>
    <link>https://blog.deimos.fr/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on Deimosfr Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jan 2018 18:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://blog.deimos.fr/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Traefik HA Helm chart with Let&#39;s Encrypt on Kubernetes</title>
      <link>https://blog.deimos.fr/2018/01/23/traefik-ha-helm-chart-with-le-on-k8s/</link>
      <pubDate>Tue, 23 Jan 2018 18:00:00 +0200</pubDate>
      
      <guid>https://blog.deimos.fr/2018/01/23/traefik-ha-helm-chart-with-le-on-k8s/</guid>
      <description>Traefik (pronounced like traffic) is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Eureka, Amazon DynamoDB, Rest API, file…) to manage its configuration automatically and dynamically.
In a previous post, I explained how to manually deploy it in HA mode. For MySocialApp (iOS and Android social app builder - SaaS), I had to automate it.</description>
    </item>
    
    <item>
      <title>Kubernetes with Traefik and Let&#39;s Encrypt</title>
      <link>https://blog.deimos.fr/2017/08/20/kubernetes-with-traefik-and-lets-encrypt/</link>
      <pubDate>Sun, 20 Aug 2017 14:58:07 +0200</pubDate>
      
      <guid>https://blog.deimos.fr/2017/08/20/kubernetes-with-traefik-and-lets-encrypt/</guid>
      <description>Traefik (pronounced like traffic) is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Eureka, Amazon DynamoDB, Rest API, file…) to manage its configuration automatically and dynamically.
I wanted to deploy it on Kubernetes for its interesting features like:
 Connect to Kubernetes API to listen changes and perform on the fly updates Automatic SSL management through Let&amp;rsquo;s encrypt (SNI) Prometheus native integration HTTP/2 support  I really like HAProxy, but in a Kubernetes case, it&amp;rsquo;s not the recommended solution because of its lake of features.</description>
    </item>
    
    <item>
      <title>Deploy Kubernetes with Ansible</title>
      <link>https://blog.deimos.fr/2017/04/18/deploy-kubernetes-with-ansible/</link>
      <pubDate>Tue, 18 Apr 2017 20:18:07 +0200</pubDate>
      
      <guid>https://blog.deimos.fr/2017/04/18/deploy-kubernetes-with-ansible/</guid>
      <description>Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications. I&amp;rsquo;m using it for Nousmotards and decided to build an Ansible role for it to make it simpler to deploy.
Why did I built it as other projects like Kargo already exists? I just wanted a simple and maintainable role based on CoreOS official documentation. That&amp;rsquo;s what I did:
 This role bootstrap a Kubernetes cluster based on CoreOS Container Linux for production usages.</description>
    </item>
    
  </channel>
</rss>