<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Let's Encrypt on Deimosfr Blog</title><link>https://blog.deimos.fr/categories/lets-encrypt/</link><description>Recent content in Let's Encrypt on Deimosfr Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 23 Jan 2018 18:00:00 +0200</lastBuildDate><atom:link href="https://blog.deimos.fr/categories/lets-encrypt/index.xml" rel="self" type="application/rss+xml"/><item><title>Traefik HA Helm chart with Let's Encrypt on Kubernetes</title><link>https://blog.deimos.fr/2018/01/23/traefik-ha-helm-chart-with-le-on-k8s/</link><pubDate>Tue, 23 Jan 2018 18:00:00 +0200</pubDate><guid>https://blog.deimos.fr/2018/01/23/traefik-ha-helm-chart-with-le-on-k8s/</guid><description>Traefik (pronounced like traffic) is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Eureka, Amazon DynamoDB, Rest API, file…) to manage its configuration automatically and dynamically.
In a previous post, I explained how to manually deploy it in HA mode. For MySocialApp (iOS and Android social app builder - SaaS), I had to automate it.</description></item><item><title>Kubernetes with Traefik and Let's Encrypt</title><link>https://blog.deimos.fr/2017/08/20/kubernetes-with-traefik-and-lets-encrypt/</link><pubDate>Sun, 20 Aug 2017 14:58:07 +0200</pubDate><guid>https://blog.deimos.fr/2017/08/20/kubernetes-with-traefik-and-lets-encrypt/</guid><description>Traefik (pronounced like traffic) is a modern HTTP reverse proxy and load balancer made to deploy microservices with ease. It supports several backends (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Eureka, Amazon DynamoDB, Rest API, file…) to manage its configuration automatically and dynamically.
I wanted to deploy it on Kubernetes for its interesting features like:
Connect to Kubernetes API to listen changes and perform on the fly updates Automatic SSL management through Let&amp;rsquo;s encrypt (SNI) Prometheus native integration HTTP/2 support I really like HAProxy, but in a Kubernetes case, it&amp;rsquo;s not the recommended solution because of its lake of features.</description></item></channel></rss>